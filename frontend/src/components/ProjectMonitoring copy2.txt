import React, { useEffect, useRef, useState } from "react";
import { Link } from "react-router-dom";

const ProjectMonitoring = () => {
  const [project, setProject] = useState();
  const [company, setCompany] = useState();
  const [monitor, setMonitor] = useState([]);
  const [monitorDetail, setMonitorDetail] = useState();
  const mntRef = useRef([]);

  const today = new Date();
  const year = today.getFullYear();
  const month = today.getMonth().toString().padStart(2, "0");
  const yyyymm = `${year}${month}`;

  useEffect(() => {
    mntRef.current[0].value = yyyymm;
    projectList();
    companyList();
    mntRef.current[0].focus();
  }, []);

  const projectList = () => {
    let pjtUrl = "http://localhost/assign/projectList";

    fetch(pjtUrl)
      .then((Res) => {
        if (Res.status === 200) {
          return Res.json();
        } else if (Res.status === 204) {
          alert("데이터가 존재하지 않습니다.");
          throw Error("데이터가 데이터가 존재하지 않습니다.");
        }
      })
      .then((data) => {
        setProject(data);
      })
      .catch((error) => {
        console.error(error.message);
      });
  };

  const companyList = () => {
    let comurl = "http://localhost/assign/companyList";

    fetch(comurl)
      .then((Res) => {
        if (Res.status === 200) {
          return Res.json();
        } else if (Res.status === 204) {
          alert("데이터가 존재하지 않습니다.");
          throw Error("데이터가 데이터가 존재하지 않습니다.");
        }
      })
      .then((data) => {
        setCompany(data);
      })
      .catch((error) => {
        console.error(error.message);
      });
  };

  const listCheck = () => {
    if (mntRef.current[0].value.length !== 6) {
      alert("검수기준월을 입력하세요.(6자리)");
      mntRef.current[0].focus();
      return "NO";
    }
    return "OK";
  };

  const monitorProjectList = () => {
    if (listCheck() === "OK") {
      let likeRef1 = mntRef.current[0].value;
      let likeRef2 = mntRef.current[1].value;
      let likeRef3 = mntRef.current[2].value;

      let baseurl = "http://localhost/monitor/like";
      let listUrl =
        baseurl +
        "?signMonth=" +
        likeRef1 +
        "&pjtNo=" +
        likeRef2 +
        "&companyNo=" +
        likeRef3;

      console.log("listUrl ==>", listUrl);

      fetch(listUrl)
        .then((Res) => {
          if (Res.status === 200) {
            return Res.json();
          } else if (Res.status === 204) {
            setMonitor("");
            alert("데이터가 존재하지 않습니다.");
            throw Error("데이터가 데이터가 존재하지 않습니다.");
          }
        })
        .then((data) => {
          setMonitor(data);
          return true;
        })
        .catch((error) => {
          console.error(error.message);
        });
    }
  };

  const ProjectCheckMonitoring = () => {
    let url = "http://localhost/monitor/list/" + mntRef.current[0].value;

    fetch(url)
      .then((Res) => {
        if (Res.status === 200) {
          return Res.json();
        } else if (Res.status === 204) {
          setMonitor("");
          alert("데이터가 존재하지 않습니다.");
          throw Error("데이터가 데이터가 존재하지 않습니다.");
        }
      })
      .then((data) => {
        setMonitor(data);
      })
      .catch((error) => {
        console.error(error.message);
      });
  };

  return (
    <div className="container-fluid">
      <h4 className="text-center">
        프로젝트 게약-투입-검수 통합 Monitoring입니다
      </h4>
      <hr />
      <b>검수기준월 :</b>
      &nbsp;
      <input
        type="text"
        maxLength="6"
        style={{ width: "80px", textAlign: "center" }}
        ref={(el) => (mntRef.current[0] = el)}
      />
      &nbsp;
      <b>프로젝트 :</b>
      &nbsp;
      <select
        name="pjtNo"
        ref={(el) => (mntRef.current[1] = el)}
        style={{ width: "250px" }}
      >
        <option value="" defaultValue="프로젝트 선택">
          프로젝트 선택
        </option>
        {project &&
          project.map((item, key) => (
            <option key={item.pjtNo} value={item.pjtNo}>
              [ {item.pjtNo} ] {item.pjtNm}
            </option>
          ))}
      </select>
      &nbsp;
      <b>BP사 :</b>
      &nbsp;
      <select
        name="companyNo"
        ref={(el) => (mntRef.current[2] = el)}
        style={{ width: "200px" }}
      >
        <option value="" defaultValue="BP사 선택">
          BP사 선택
        </option>
        {company &&
          company.map((item, key) => (
            <option key={item.companyNo} value={item.companyNo}>
              [ {item.companyNo} ] {item.companyNm}
            </option>
          ))}
      </select>
      &nbsp;
      <button class="btn btn-primary" onClick={monitorProjectList}>
        조회
      </button>
      &nbsp;
      <label style={{ fontSize: "12pt" }}>
        (자료 조회 및 프로젝트를 선택하여 Monitoring 상세내역을 확인하세요!)
      </label>
      <hr />
      <table
        className="table table-striped table-bordered table table-condensed"
        style={{ fontSize: "90%" }}
      >
        <thead>
          <tr align="center">
            <th className="bg-secondary-subtle scope-col">프로젝트 No</th>
            <th className="bg-secondary-subtle scope-col">프로젝트 명</th>
            <th className="bg-secondary-subtle scope-col">발주기관</th>
            <th className="bg-secondary-subtle scope-col">시작일</th>
            <th className="bg-secondary-subtle scope-col">종료일</th>
            <th className="bg-secondary-subtle scope-col">PM</th>
            <th className="bg-secondary-subtle scope-col">기간(개월)</th>
            <th className="bg-secondary-subtle scope-col">총 M/M</th>
            <th className="bg-secondary-subtle scope-col">수주금액</th>
          </tr>
        </thead>
        <tbody>
          {monitor &&
            monitor.map((monitor, key) => (
              <tr key={monitor.pjtNo}>
                <td>
                  <Link
                    to={`/monitor/list/${monitor.monitorMonth}/${monitor.pjtNo}`}
                  >
                    {monitor.pjtNo}
                  </Link>
                </td>
                <td align="left">{monitor.pjtNm}</td>
                <td>{monitor.orderOrg}</td>
                <td>{monitor.startDt}</td>
                <td>{monitor.endDt}</td>
                <td>
                  {monitor.pm} {monitor.position}
                </td>
                <td>{monitor.term}</td>
                <td>{monitor.totMm}</td>
                <td align="right">{monitor.totAmt.toLocaleString("ko-KR")}</td>
              </tr>
            ))}
        </tbody>
      </table>
      <hr />
      <div style="width:100%">
        <table
          className="table table-striped table-bordered table table-condensed"
          style={{ width:"100%", fontSize: "90%" }}
        >
          <tbody>
            <tr align="center">
              <th className="bg-secondary-subtle scope-col">BP사 명</th>
              <th className="bg-secondary-subtle scope-col">계약인력</th>
              <th className="bg-secondary-subtle scope-col">등급</th>
              <th className="bg-secondary-subtle scope-col">계약시작일</th>
              <th className="bg-secondary-subtle scope-col">계약종료일</th>
              <th className="bg-secondary-subtle scope-col">게약M/M</th>
              <th className="bg-secondary-subtle scope-col">계약단가</th>
              <th className="bg-secondary-subtle scope-col">계약금액</th>
            </tr>
          </tbody>
        </table>
      </div>
      <div style='width:50%; float:left'>
        <table
          className="table table-striped table-bordered table table-condensed"
          style={{ width:"100%", fontSize: "90%" }}
        >
          <tbody>
            <tr align="center">
            <th cassName="bg-secondary-subtle scope-col" style={{ color: "blue" }} >투입인력</th>
            <th cassName="bg-secondary-subtle scope-col" style={{ color: "blue" }} >등급</th>
            <th cassName="bg-secondary-subtle scope-col" style={{ color: "blue" }} >투입시작일</th>
            <th cassName="bg-secondary-subtle scope-col" style={{ color: "blue" }} >투입종료일</th>
            <th cassName="bg-secondary-subtle scope-col" style={{ color: "blue" }} >실투입M/M</th>
            </tr>
          </tbody>
        </table>
      </div>
      <div style='width:50%; float:left'>
        <table
          className="table table-striped table-bordered table table-condensed"
          style={{ width:"100%", fontSize: "90%" }}
        >
          <tbody>
            <tr align="center">
            <th cassName="bg-secondary-subtle scope-col" style={{ color: "red" }} >검수인력</th>
            <th cassName="bg-secondary-subtle scope-col" style={{ color: "red" }} >등급</th>
            <th cassName="bg-secondary-subtle scope-col" style={{ color: "red" }} >검수시작일</th>
            <th cassName="bg-secondary-subtle scope-col" style={{ color: "red" }} >검수종료일</th>
            <th cassName="bg-secondary-subtle scope-col" style={{ color: "red" }} >검수M/M</th>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  )
};

export default ProjectMonitoring;
